<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.metas</groupId>
	<artifactId>de.metas.parent.general</artifactId>
	<version>3-development-SNAPSHOT</version>

	<packaging>pom</packaging>

	<description>Default parent pom with common settings (e.g. java file encoding) to be used by all maven projects</description>

	<url>http://www.metasfresh.com/</url>

	<organization>
		<name>metas GmbH</name>
		<url>http://www.metasfresh.com/</url>
	</organization>

	<inceptionYear>2015</inceptionYear>

	<developers>
		<developer>
			<name>metasfresh contributors</name>
			<organizationUrl>http://www.metasfresh.com/</organizationUrl>
			<email>contributors@metasfresh.com</email>
		</developer>
	</developers>

	<properties>
			<!-- 
			Please use this property when declaring metasfresh dependencies.
			Example:
			<dependency>
				<groupId>de.metas.commons.cxf</groupId>
				<artifactId>metasfresh-commons-cxf</artifactId>
				<version>${metasfresh-dependency.version}</version>
			</dependency>
			
			Using of ${metasfresh-dependency.version} is deprecated.
			See https://github.com/metasfresh/metasfresh-documentation/blob/master/infrastructure/CI_infrastructure.md for explanations.
			-->
		<metasfresh-dependency.version>[1-master-SNAPSHOT],[${project.version}]</metasfresh-dependency.version>

		<!-- java 1.7. is currently our minimum, but some projects might already be implemented with java-8-->
		<minimum.java.version>1.7</minimum.java.version>
	</properties>

	<repositories>
		<!-- The repositories that we relate on are defined in this parent POM, 
			because whether an artifact is found should not depend on a specific user's 
			settings.xml -->
		<repository>
			<id>metas-github-repo</id>
			<name>metasfresh repository on github</name>
			<url>https://raw.githubusercontent.com/metasfresh/metasfresh-maven-repo/master/repository</url>
		</repository>
	</repositories>

	<distributionManagement>
		<!-- 
		Where to deploy build artifacts; if you can't reach this repo, you can still make your own builds
		TODO: think about moving with the repo to a public place with much more storage :-) 
		-->
		<snapshotRepository>
			<id>metas-nexus-repo</id>
			<name>Maven metasfresh Snapshots Repository</name>
			<url>http://dedep901:8081/nexus/content/repositories/metasfresh-snapshots/</url>
		</snapshotRepository>

	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- we set the metasfresh-wide encoding for code and resource files to be UTF-8 by default -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<source>${minimum.java.version}</source>
						<target>${minimum.java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<includes>
						<!-- default inclusions, see http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html -->
							<include>**/Test*.java</include>
							<include>**/*Test.java</include>
							<include>**/*TestCase.java</include>
						
						<!-- additional include, because we often use that file name pattern -->
							<include>**/*Tests.java</include>
						</includes>
					</configuration>
				</plugin>
			
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>
											vaadin-maven-plugin
										</artifactId>
										<versionRange>
											[7.6.1,)
										</versionRange>
										<goals>
											<goal>compile-theme</goal>
											<goal>resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>